"use strict";(self.webpackChunksever=self.webpackChunksever||[]).push([[771],{"./app/components/atoms/Btn.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Large:()=>Large,Primary:()=>Primary,Secondary:()=>Secondary,Small:()=>Small,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Btn_stories});var dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js");__webpack_require__("./node_modules/next/dist/compiled/react/index.js");function cov_bbc977wia(){var path="D:\\react at sabaicode\\Homework\\sever\\app\\components\\atoms\\Btn.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"6d6a435027f9332a73aeef369bea0ead83f5c8ca"===coverage[path].hash||(coverage[path]={path:"D:\\react at sabaicode\\Homework\\sever\\app\\components\\atoms\\Btn.tsx",statementMap:{0:{start:{line:3,column:12},end:{line:8,column:1}},1:{start:{line:4,column:4},end:{line:7,column:7}},2:{start:{line:10,column:0},end:{line:74,column:2}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:3,column:12},end:{line:3,column:13}},loc:{start:{line:3,column:34},end:{line:8,column:1}},line:3}},branchMap:{},s:{0:0,1:0,2:0},f:{0:0},b:{},inputSourceMap:{version:3,sources:["D:/react at sabaicode/Homework/sever/app/components/atoms/Btn.tsx"],sourcesContent:["import React from \"react\";\r\n\r\nexport interface ButtonProps {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  primary?: boolean;\r\n  /**\r\n   * What background color to use\r\n   */\r\n  backgroundColor?: string;\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  size?: 'small' | 'medium' | 'large';\r\n  /**\r\n   * Button contents\r\n   */\r\n  label: string;\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  onClick?: () => void;\r\n}\r\n\r\nconst Btn: React.FC<ButtonProps> = ({ label, onClick }) => {\r\n  return <button onClick={onClick}>{label}</button>;\r\n};\r\n\r\nexport default Btn;\r\n"],names:["React","Btn","label","onClick","button"],mappings:";AAAA,OAAOA,WAAW,QAAQ;AAyB1B,MAAMC,MAA6B,CAAC,EAAEC,KAAK,EAAEC,OAAO,EAAE;IACpD,qBAAO,KAACC;QAAOD,SAASA;kBAAUD;;AACpC;AAEA,eAAeD,IAAI"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6d6a435027f9332a73aeef369bea0ead83f5c8ca"});var actualCoverage=coverage[path];return cov_bbc977wia=function(){return actualCoverage},actualCoverage}cov_bbc977wia(),cov_bbc977wia().s[0]++;const Btn=({label,onClick})=>(cov_bbc977wia().f[0]++,cov_bbc977wia().s[1]++,(0,jsx_runtime.jsx)("button",{onClick,children:label})),atoms_Btn=Btn;cov_bbc977wia().s[2]++,Btn.__docgenInfo={description:"",methods:[],displayName:"Btn",props:{primary:{required:!1,tsType:{name:"boolean"},description:"Is this the principal call to action on the page?"},backgroundColor:{required:!1,tsType:{name:"string"},description:"What background color to use"},size:{required:!1,tsType:{name:"union",raw:"'small' | 'medium' | 'large'",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'medium'"},{name:"literal",value:"'large'"}]},description:"How large should the button be?"},label:{required:!0,tsType:{name:"string"},description:"Button contents"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Optional click handler"}}};const Btn_stories={title:"Example11/Btn",component:atoms_Btn,parameters:{layout:"centered"},tags:["autodocs"],args:{onClick:(0,dist.fn)()}},Primary={args:{label:"Button"}},Secondary={args:{label:"Button"}},Large={args:{label:"Button"}},Small={args:{label:"Button"}},__namedExportsOrder=["Primary","Secondary","Large","Small"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Button"\n  }\n}',...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Button"\n  }\n}',...Secondary.parameters?.docs?.source}}},Large.parameters={...Large.parameters,docs:{...Large.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Button"\n  }\n}',...Large.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Button"\n  }\n}',...Small.parameters?.docs?.source}}}}}]);